name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main 

jobs:
  build-and-push-ecr-image:
    runs-on: ubuntu-latest  
    
    steps:  
      - name: Checkout
        uses: actions/checkout@v2    
        
      - name: Setup AWS ECR Details
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-pf-aws-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push the tagged docker image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-pf-aws-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_PROD }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


  continuous-deployment:
      needs: build-and-push-ecr-image
      runs-on: ["self-hosted","prod"]
      steps:
        - name: Checkout
          uses: actions/checkout@v3
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}
        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1
        - name: Stop and remove existing FastAPI container if running
          run: |
            docker ps -aq --filter "name=${{ secrets.FASTAPI_CONTAINER }}" | xargs -r docker stop || true
            docker ps -aq --filter "name=${{ secrets.FASTAPI_CONTAINER }}" | xargs -r docker rm -fv || true
        - name: Remove existing Docker images
          run: |
            docker images -q ${{ secrets.AWS_ECR_LOGIN_URI_PROD }}/${{ secrets.AWS_ECR_REPO_PROD }}:latest | xargs -r docker rmi -f || true
        - name: Pull latest image
          run: |
            docker pull ${{ secrets.AWS_ECR_LOGIN_URI_PROD }}/${{ secrets.AWS_ECR_REPO_PROD }}:latest
        - name: Run FastAPI Container
          run: |
            docker run -d --name ${{ secrets.FASTAPI_CONTAINER }} -p ${{ secrets.FASTAPI_PORT }}:${{ secrets.FASTAPI_PORT }} ${{ secrets.AWS_ECR_LOGIN_URI_PROD }}/${{ secrets.AWS_ECR_REPO_PROD }}:latest
            